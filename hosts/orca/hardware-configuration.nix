# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/47d27081-9599-4528-8e8f-ef58ff28383d";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-0953f5b3-0a49-4a2b-a780-11d2b8b58c08".device = "/dev/disk/by-uuid/0953f5b3-0a49-4a2b-a780-11d2b8b58c08";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/06E4-1971";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/mnt/games" =
    { device = "/dev/disk/by-uuid/b692d982-2603-4f40-8bf2-da3e6009fcfa";
      fsType = "ext4";
      options = [ "nofail" "user" ];
    };

  boot.initrd.luks.devices."luks-81c01fe0-5db7-41f5-bd83-ff66a9243c72".device = "/dev/disk/by-uuid/81c01fe0-5db7-41f5-bd83-ff66a9243c72";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/60e407df-b147-46b5-942f-27c863022ebf"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-59320ca2ae26.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
